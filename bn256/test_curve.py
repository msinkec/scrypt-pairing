import os
import json
import random

from scryptlib import (
        compile_contract, build_contract_class, build_type_classes, Sig
        )

# We use mister Buterins BN128 imlementation: https://github.com/ethereum/py_pairing
from py_ecc import bn128



if __name__ == '__main__':
    contract = 'testCurve.scrypt' 

    compiler_result = compile_contract(contract, debug=False)
    desc = compiler_result.to_desc()

    # Load desc instead:
    #with open('./out/testCurve_desc.json', 'r') as f:
    #    desc = json.load(f)

    type_classes = build_type_classes(desc)
    CurvePoint = type_classes['CurvePoint']

    BN256CurveTest = build_contract_class(desc)
    bn256_curve_test = BN256CurveTest()

    assert bn256_curve_test.testMulFQ2(
        [3405987990548047266285113383219237375681208871336813088616720519859893290134,1097898363339025022619935773355466049707129377218109808632059205990511152495],
        [15830831802146768141237429417912648980608634485983879601502329719750329240910,17600223279572061457933096596049532983114752208629637134127581753862971379897],
        [13280456509302578120643211182778528028445008769070598400682486420300123382757,14077784831528911634874593541487249727922369879397996051239784098410438328913]
    ).verify()

    assert bn256_curve_test.testMulFQ2(
        [2105949740918914271063060105651059047460421027348448486594564918154771860041,7208877007268361263057405770448273475112041783806363014296774951734852085369],
        [10430039423184564997462271628464346688096335645121092027654136556673260830422,2799353695224389898488658176425253066859548401343314072983449794730044616840],
        [21158591738682076599638557511778046142659168645991996733335023337715484387262,10726908656447904775952145913657767139169072279906216760789214831406461465222]
    ).verify()

    assert bn256_curve_test.testSquareFQ2(
        [10164919993845888976671999787039108309239529043666519144065145175600019709494,15683256606647490518785263877633372276865645512106721863554218588333290209773],
        [17716346817668547898162895567898312367694994438385561530353133167613592559022,749864555281199384965917972403867944977631700788046722647372737976621316898]
    ).verify()

    assert bn256_curve_test.testSquareFQ2(
        [19144803157775278375159214991808770972199362191093019402310641453501381025905,16446063910291131587708796740164098404410454097985448112522177643751361268548],
        [13281746305287042580201749504728912103367391312590007531435309421806045723870,10607158569612045664768872322411272349032031201412280681690286780254028051669]
    ).verify()

    assert bn256_curve_test.testInvFQ2(
        [12663726281075052576529495445555233084042548599504779355532284358480159563264,16917274543618607638879329582985454648863990160135520144890278124310018978736],
        [19933770970579907078333995283070161635300178294043109376243005639132530396374,20223262398611830173189782858380965369898070481705127844627698905560703728637]
    ).verify()

    assert bn256_curve_test.testInvFQ2(
        [2052813411379716806235723156424559943938583125432754199617746434996707713042,15620931015604026000042387094780759873793284514400320915957021197407947202637],
        [12635521097006000412927971235813000722393121407338074671576732785491229027785,4637679684128228996969231133835363570799044502926418616344576372644025384724]
    ).verify()

    # These are non affine coords.
    assert bn256_curve_test.testDoubleCurvePoint(
        CurvePoint({
            'x': 73788687783923572865529582504907608155214956439395813334735191320569125178503,
            'y': -122496500026268596728444203481896352677017027832972886303288710168393500005538,
            'z': 22987206675677772134801294288308330334594402809416658852345367183449639863912,
            't': 0
        }),
        CurvePoint({
            'x': 40094083719719619393940766425357327271087026231038327347555625854824010145758,
            'y': -9852071347415463562096344803767073482118243750295290563405771220847022942556,
            'z': 4329070336545105456186058296779459015225317083929127465725029105803417163430,
            't': 0
        })
    ).verify()

    assert bn256_curve_test.testDoubleCurvePoint(
        CurvePoint({
            'x': 58933191654204430737755350825707727871323471599138817260555591417335411077303,
            'y': -92253652949023445357391447639148093225242895481141910891359486284248895776654,
            'z': 41389450358466649992045910955401514822421155557957604256660981114399918309620,
            't': 0
        }),
        CurvePoint({
            'x': -22554907915555176350414532685275495628984729186445329361110645191135298832515,
            'y': -31750153302866858947412513189842729468562533856814599153904194585421437479826,
            'z': 7534918716301660006808367044150199408346011511926217932276215521046299265354,
            't': 0
        })
    ).verify()

    assert bn256_curve_test.testAddCurvePoints(
        CurvePoint({
            'x': -35390452869298637112488933694426790652442594116821618451180389231471007425452,
            'y': -6490513048170728222706017446130359059994637236813609840630884093800788303151,
            'z': 20139939579536595913240503788590498159668308368538632155876609166890909225923,
            't': 0
        }),
        CurvePoint({
            'x': 35795802497547527817808855434523126280073030131181877489882412374201501260009,
            'y': -82949508411743709219775852956283281164774390393008273133518327917030414687567,
            'z': 25669920468901608656135782549488099258458532883262993039712356496940744056154,
            't': 0
        }),
        CurvePoint({
            'x': -17074470727979385113415987325580287400653009212241198764596378074597878613722,
            'y': -28830552005025113116427610177374917747492322467562256138950885722750851786561,
            'z': 1452172047100442523711748697750195030836423197603084104488756753986115379591,
            't': 0
        })
    ).verify()

    assert bn256_curve_test.testAddCurvePoints(
        CurvePoint({
            'x': 29553149906910695719791222001045778584925908674542136349193872176195517328265,
            'y': -85385622986228964465663027385316708852734498311801234253397233906429876803337,
            'z': 10784377178629024445507589335108283669452020808671692422391104558997985100674,
            't': 0
        }),
        CurvePoint({
            'x': 65009169066220450843182678699145269739718695304088763427975856814450840234477,
            'y': -68529941283186109390562472977748515530318890604843776084932019871347372389499,
            'z': 3747318957881019499007836509519063530142499150940739495000500630123492896290,
            't': 0
        }),
        CurvePoint({
            'x': -21669532904408586641859911338644481048613871217980485578938607720160366501644,
            'y': -23799320082236174435746520850388517274527057167887457841371974280183685237619,
            'z': 10564883135751132081352506237115321495100553200609754850888583741595829041081,
            't': 0
        })
    ).verify()

    assert bn256_curve_test.testAddCurvePoints(
        CurvePoint({
            'x': 29553149906910695719791222001045778584925908674542136349193872176195517328265,
            'y': -85385622986228964465663027385316708852734498311801234253397233906429876803337,
            'z': 10784377178629024445507589335108283669452020808671692422391104558997985100674,
            't': 0
        }),
        CurvePoint({
            'x': 0,
            'y': 0,
            'z': 0,
            't': 0
        }),
        CurvePoint({
            'x': 29553149906910695719791222001045778584925908674542136349193872176195517328265,
            'y': -85385622986228964465663027385316708852734498311801234253397233906429876803337,
            'z': 10784377178629024445507589335108283669452020808671692422391104558997985100674,
            't': 0
        })
    ).verify()

